#
# Copyright 2020 Fraunhofer Institute for Software and Systems Engineering
# Copyright 2021 Fraunhofer Institute for Applied Information Technology
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version: '3.5'

services:
  frontproxy:
    container_name: frontproxy
    hostname: frontproxy
    image: nginx:1.20.1-alpine
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/private
    depends_on:
      - appstore-ui
      - appstore
    networks:
      - frontend
      - proxynet
  appstore-ui:
    container_name: appstore-ui
    hostname: appstore-ui
    image: registry.fit.fraunhofer.de/dataspace/appstore/idsappstoreuits/appstoreui-drm:latest
    restart: always
    expose:
      - 8082
    networks:
      - proxynet
  postgres:
    image: postgres:13
    container_name: appstore-postgres
    expose:
      - 5432
    env_file:
      - ./postgres.env
    networks:
      - proxynet
    volumes:
      - connector-data:/var/lib/postgresql/data
  appstore:
    container_name: appstore
    hostname: appstore
    image: registry.fit.fraunhofer.de/dataspace/appstore/idsappstorev6/appstore-drm:latest
    restart: "always"
    expose:
      - 8080
    env_file:
      - ./connector.env
    volumes:
      - search-data:/data/search
    networks:
      - proxynet
    depends_on:
      - postgres

networks:
  proxynet:
    name: reverseproxy_network
  frontend:
    name: frontend_network

volumes:
  connector-data: {}
  search-data: {}
