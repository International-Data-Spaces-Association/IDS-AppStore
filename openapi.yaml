#
# Copyright 2021 Fraunhofer Institute for Applied Information Technology
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

openapi: 3.0.1
info:
  title: IDS AppStore
  description: IDS AppStore developed by the Fraunhofer FIT
  contact:
    name: IDS AppStore
    url: https://spring.io/projects/spring-boot/appstore
    email: '@email@'
  license:
    name: "Apache License, Version 2.0"
    url: https://www.apache.org/licenses/LICENSE-2.0.txt
  version: 1.0.0
servers:
  - url: https://localhost:8080
    description: Generated server url
tags:
  - name: Representations
    description: Endpoints for operations on representations
  - name: Artifacts
    description: Endpoints for operations on artifacts
  - name: Rules
    description: Endpoints for operations on rules
  - name: Contracts
    description: Endpoints for operations on contracts
  - name: Endpoints
    description: Endpoints for operations on endpoints
  - name: Usage Control
    description: Endpoints for contract/policy handling
  - name: Data Apps
    description: Endpoints for operations on data apps
  - name: "Registry: User and Container management"
    description: Endpoints for backendApp handling
  - name: UI
    description: Endpoints for operations on data apps
  - name: Resources
    description: Endpoints for operations on resources
  - name: Connector
    description: Endpoints for connector information
  - name: Catalogs
    description: Endpoints for operations on catalogs
  - name: Configurations
    description: Endpoints for operations on configurations
  - name: Subscriptions
    description: Endpoints for operations on subscriptions
  - name: Messages
    description: Endpoints for invoke sending messages
  - name: Agreements
    description: Endpoints for contract agreement handling
  - name: Brokers
    description: Endpoints for operations on brokers
  - name: "Backend: Registry Webhooks"
    description: Endpoints for Registry Webhooks
paths:
  /api/subscriptions/{id}:
    get:
      tags:
        - Subscriptions
      summary: Get a base resource by id
      operationId: get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionView'
    put:
      tags:
        - Subscriptions
      summary: Update a base resource by id
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionView'
    delete:
      tags:
        - Subscriptions
      summary: Delete a base resource by id
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/rules/{id}:
    get:
      tags:
        - Rules
      summary: Get a base resource by id
      operationId: get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractRuleView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractRuleView'
    put:
      tags:
        - Rules
      summary: Update a base resource by id
      operationId: update_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractRuleDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractRuleView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractRuleView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractRuleView'
    delete:
      tags:
        - Rules
      summary: Delete a base resource by id
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/rules/{id}/contracts:
    get:
      tags:
        - Rules
      summary: Get all children of a base resource with pagination
      operationId: getResource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
    put:
      tags:
        - Rules
      summary: Replace the children of a base resource
      operationId: replaceResources
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
        - Rules
      summary: Add a list of children to a base resource
      operationId: addResources
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
    delete:
      tags:
        - Rules
      summary: Remove a list of children from a base resource
      operationId: removeResources
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/resources/{id}:
    get:
      tags:
        - Resources
      summary: Get a base resource by id
      operationId: get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceView'
    put:
      tags:
        - Resources
      summary: Update a base resource by id
      operationId: update_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceView'
    delete:
      tags:
        - Resources
      summary: Delete a base resource by id
      operationId: delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/resources/{id}/representations:
    get:
      tags:
        - Resources
      summary: Get all children of a base resource with pagination
      operationId: getResource_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
    put:
      tags:
        - Resources
      summary: Replace the children of a base resource
      operationId: replaceResources_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
        - Resources
      summary: Add a list of children to a base resource
      operationId: addResources_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
    delete:
      tags:
        - Resources
      summary: Remove a list of children from a base resource
      operationId: removeResources_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/resources/{id}/contracts:
    get:
      tags:
        - Resources
      summary: Get all children of a base resource with pagination
      operationId: getResource_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
    put:
      tags:
        - Resources
      summary: Replace the children of a base resource
      operationId: replaceResources_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
        - Resources
      summary: Add a list of children to a base resource
      operationId: addResources_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
    delete:
      tags:
        - Resources
      summary: Remove a list of children from a base resource
      operationId: removeResources_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/resources/{id}/catalogs:
    get:
      tags:
        - Resources
      summary: Get all children of a base resource with pagination
      operationId: getResource_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
    put:
      tags:
        - Resources
      summary: Replace the children of a base resource
      operationId: replaceResources_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
        - Resources
      summary: Add a list of children to a base resource
      operationId: addResources_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
    delete:
      tags:
        - Resources
      summary: Remove a list of children from a base resource
      operationId: removeResources_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/representations/{id}:
    get:
      tags:
        - Representations
      summary: Get a base resource by id
      operationId: get_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentationView'
    put:
      tags:
        - Representations
      summary: Update a base resource by id
      operationId: update_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepresentationDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentationView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentationView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentationView'
    delete:
      tags:
        - Representations
      summary: Delete a base resource by id
      operationId: delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/representations/{id}/resources:
    get:
      tags:
        - Representations
      summary: Get all children of a base resource with pagination
      operationId: getResource_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
    put:
      tags:
        - Representations
      summary: Replace the children of a base resource
      operationId: replaceResources_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
        - Representations
      summary: Add a list of children to a base resource
      operationId: addResources_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
    delete:
      tags:
        - Representations
      summary: Remove a list of children from a base resource
      operationId: removeResources_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/representations/{id}/artifacts:
    get:
      tags:
        - Representations
      summary: Get all children of a base resource with pagination
      operationId: getResource_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
    put:
      tags:
        - Representations
      summary: Replace the children of a base resource
      operationId: replaceResources_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
        - Representations
      summary: Add a list of children to a base resource
      operationId: addResources_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
    delete:
      tags:
        - Representations
      summary: Remove a list of children from a base resource
      operationId: removeResources_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/representations/{id}/apps:
    get:
      tags:
        - Representations
      summary: Get all children of a base resource with pagination
      operationId: getResource_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppView'
    put:
      tags:
        - Representations
      summary: Replace the children of a base resource
      operationId: replaceResources_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
        - Representations
      summary: Add a list of children to a base resource
      operationId: addResources_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppView'
    delete:
      tags:
        - Representations
      summary: Remove a list of children from a base resource
      operationId: removeResources_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/notify:
    put:
      tags:
        - Messages
      summary: Notify all subscribers
      description: "Can be used to manually notify all subscribers about a resource\
        \ offer, representation, or artifact update."
      operationId: sendMessage
      parameters:
        - name: elementId
          in: query
          description: The element id.
          required: true
          schema:
            type: string
            format: uri
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "204":
          description: No Content
          content:
            '*/*':
              schema:
                type: object
  /api/endpoints/{id}:
    get:
      tags:
        - Endpoints
      summary: Get a base resource by id
      operationId: get_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EndpointView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EndpointView'
    put:
      tags:
        - Endpoints
      summary: Update a base resource by id
      operationId: update_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EndpointView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EndpointView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EndpointView'
    delete:
      tags:
        - Endpoints
      summary: Delete a base resource by id
      operationId: delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/endpoints/{id}/apps:
    get:
      tags:
        - Endpoints
      summary: Get all children of a base resource with pagination
      operationId: getResource_10
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppView'
    put:
      tags:
        - Endpoints
      summary: Replace the children of a base resource
      operationId: replaceResources_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
        - Endpoints
      summary: Add a list of children to a base resource
      operationId: addResources_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppView'
    delete:
      tags:
        - Endpoints
      summary: Remove a list of children from a base resource
      operationId: removeResources_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/contracts/{id}:
    get:
      tags:
        - Contracts
      summary: Get a base resource by id
      operationId: get_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractView'
    put:
      tags:
        - Contracts
      summary: Update a base resource by id
      operationId: update_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractView'
    delete:
      tags:
        - Contracts
      summary: Delete a base resource by id
      operationId: delete_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/contracts/{id}/rules:
    get:
      tags:
        - Contracts
      summary: Get all children of a base resource with pagination
      operationId: getResource_11
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractRuleView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractRuleView'
    put:
      tags:
        - Contracts
      summary: Replace the children of a base resource
      operationId: replaceResources_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
        - Contracts
      summary: Add a list of children to a base resource
      operationId: addResources_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractRuleView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractRuleView'
    delete:
      tags:
        - Contracts
      summary: Remove a list of children from a base resource
      operationId: removeResources_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/contracts/{id}/resources:
    get:
      tags:
        - Contracts
      summary: Get all children of a base resource with pagination
      operationId: getResource_12
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
    put:
      tags:
        - Contracts
      summary: Replace the children of a base resource
      operationId: replaceResources_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
        - Contracts
      summary: Add a list of children to a base resource
      operationId: addResources_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
    delete:
      tags:
        - Contracts
      summary: Remove a list of children from a base resource
      operationId: removeResources_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/configurations/{id}:
    get:
      tags:
        - Configurations
      summary: Get a base resource by id
      operationId: get_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationView'
    put:
      tags:
        - Configurations
      summary: Update a base resource by id
      operationId: update_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationView'
    delete:
      tags:
        - Configurations
      summary: Delete a base resource by id
      operationId: delete_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/configurations/{id}/active:
    put:
      tags:
        - Configurations
      summary: Update current configuration
      operationId: setConfiguration
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                type: object
        "415":
          description: Unsupported media type
          content:
            '*/*':
              schema:
                type: object
        "204":
          description: No content
          content:
            '*/*':
              schema:
                type: object
  /api/configuration/pattern:
    get:
      tags:
        - Usage Control
      summary: Get pattern validation status
      description: Return if unsupported patterns are ignored when requesting data.
      operationId: getPatternStatus
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
    put:
      tags:
        - Usage Control
      summary: Allow unsupported patterns
      description: Allow requesting data without policy enforcement if an unsupported
        pattern is recognized.
      operationId: setPatternStatus
      parameters:
        - name: status
          in: query
          required: true
          schema:
            type: boolean
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
  /api/configuration/negotiation:
    get:
      tags:
        - Usage Control
      summary: Get contract negotiation status
      operationId: getNegotiationStatus
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
    put:
      tags:
        - Usage Control
      summary: Set contract negotiation status
      operationId: setNegotiationStatus
      parameters:
        - name: status
          in: query
          required: true
          schema:
            type: boolean
      responses:
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  empty:
                    type: boolean
                additionalProperties:
                  type: object
  /api/catalogs/{id}:
    get:
      tags:
        - Catalogs
      summary: Get a base resource by id
      operationId: get_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogView'
    put:
      tags:
        - Catalogs
      summary: Update a base resource by id
      operationId: update_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogView'
    delete:
      tags:
        - Catalogs
      summary: Delete a base resource by id
      operationId: delete_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/catalogs/{id}/resources:
    get:
      tags:
        - Catalogs
      summary: Get all children of a base resource with pagination
      operationId: getResource_13
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
    put:
      tags:
        - Catalogs
      summary: Replace the children of a base resource
      operationId: replaceResources_10
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
        - Catalogs
      summary: Add a list of children to a base resource
      operationId: addResources_10
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
    delete:
      tags:
        - Catalogs
      summary: Remove a list of children from a base resource
      operationId: removeResources_10
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/brokers/{id}:
    get:
      tags:
        - Brokers
      summary: Get a base resource by id
      operationId: get_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrokerView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrokerView'
    put:
      tags:
        - Brokers
      summary: Update a base resource by id
      operationId: update_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrokerView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrokerView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrokerView'
    delete:
      tags:
        - Brokers
      summary: Delete a base resource by id
      operationId: delete_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/artifacts/{id}:
    get:
      tags:
        - Artifacts
      summary: Get a base resource by id
      operationId: get_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtifactView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtifactView'
    put:
      tags:
        - Artifacts
      summary: Update a base resource by id
      operationId: update_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtifactView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtifactView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtifactView'
    delete:
      tags:
        - Artifacts
      summary: Delete a base resource by id
      operationId: delete_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/artifacts/{id}/representations:
    get:
      tags:
        - Artifacts
      summary: Get all children of a base resource with pagination
      operationId: getResource_16
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
    put:
      tags:
        - Artifacts
      summary: Replace the children of a base resource
      operationId: replaceResources_11
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
        - Artifacts
      summary: Add a list of children to a base resource
      operationId: addResources_11
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
    delete:
      tags:
        - Artifacts
      summary: Remove a list of children from a base resource
      operationId: removeResources_11
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/artifacts/{id}/data:
    put:
      tags:
        - Artifacts
      operationId: putData
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          '*/*':
            schema:
              type: array
              items:
                type: string
                format: byte
        required: true
      responses:
        "401":
          description: Unauthorized
        "200":
          description: Ok
    post:
      tags:
        - Artifacts
      summary: Get data by artifact id with query input
      operationId: getData
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryInput'
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
  /api/apps/{id}:
    get:
      tags:
        - Data Apps
      summary: Get a base resource by id
      operationId: get_10
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppView'
    put:
      tags:
        - Data Apps
      summary: Update a base resource by id
      operationId: update_10
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppView'
        "204":
          description: No content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppView'
    delete:
      tags:
        - Data Apps
      summary: Delete a base resource by id
      operationId: delete_10
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/apps/{id}/representations:
    get:
      tags:
        - Data Apps
      summary: Get all children of a base resource with pagination
      operationId: getResource_18
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
    put:
      tags:
        - Data Apps
      summary: Replace the children of a base resource
      operationId: replaceResources_12
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
        - Data Apps
      summary: Add a list of children to a base resource
      operationId: addResources_12
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
    delete:
      tags:
        - Data Apps
      summary: Remove a list of children from a base resource
      operationId: removeResources_12
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/apps/{id}/endpoints:
    get:
      tags:
        - Data Apps
      summary: Get all children of a base resource with pagination
      operationId: getResource_19
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelEndpointView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelEndpointView'
    put:
      tags:
        - Data Apps
      summary: Replace the children of a base resource
      operationId: replaceResources_13
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
    post:
      tags:
        - Data Apps
      summary: Add a list of children to a base resource
      operationId: addResources_13
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelEndpointView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelEndpointView'
    delete:
      tags:
        - Data Apps
      summary: Remove a list of children from a base resource
      operationId: removeResources_13
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uri
        required: true
      responses:
        "401":
          description: Unauthorized
        "204":
          description: No content
  /api/webhook/registry:
    post:
      tags:
        - "Backend: Registry Webhooks"
      operationId: registryWebhook
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: The JSON Webhook event
        required: true
      responses:
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/subscriptions:
    get:
      tags:
        - Subscriptions
      summary: Get a list of base resources with pagination
      operationId: getAll
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
    post:
      tags:
        - Subscriptions
      summary: Create a base resource
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionView'
  /api/rules:
    get:
      tags:
        - Rules
      summary: Get a list of base resources with pagination
      operationId: getAll_1
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractRuleView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractRuleView'
    post:
      tags:
        - Rules
      summary: Create a base resource
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractRuleDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractRuleView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractRuleView'
  /api/resources:
    get:
      tags:
        - Resources
      summary: Get a list of base resources with pagination
      operationId: getAll_2
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
    post:
      tags:
        - Resources
      summary: Create a base resource
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceView'
  /api/representations:
    get:
      tags:
        - Representations
      summary: Get a list of base resources with pagination
      operationId: getAll_3
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelRepresentationView'
    post:
      tags:
        - Representations
      summary: Create a base resource
      operationId: create_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepresentationDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentationView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentationView'
  /api/registry/user:
    get:
      tags:
        - "Registry: User and Container management"
      summary: Create user credentials for pulling images
      operationId: createUserCredentialsForPullingImages
      responses:
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                type: object
        "201":
          description: Created
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
        - "Registry: User and Container management"
      summary: Create new user
      description: "Creates a new user in the registry. Password or secret must be\
        \ longer than 8 chars with at least 1 uppercase letter, 1 lowercase letter\
        \ and 1 number"
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreationReq'
        required: true
      responses:
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                type: object
        "201":
          description: Created
          content:
            '*/*':
              schema:
                type: object
  /api/registry/project/member:
    post:
      tags:
        - "Registry: User and Container management"
      summary: Create project member
      operationId: createProjectMember
      parameters:
        - name: projectUserRole
          in: query
          description: "The project members role. The role id 1 for projectAdmin, 2\
          \ for developer, 3 for guest, 4 for maintainer."
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEntity'
        required: true
      responses:
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/examples/validation:
    post:
      tags:
        - Usage Control
      summary: Get pattern of policy
      description: Get the policy pattern represented by a given JSON string.
      operationId: getPolicyPattern
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: The JSON string representing a policy
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/examples/policy:
    post:
      tags:
        - Usage Control
      summary: Get example policy
      description: Get an example policy for a given policy pattern.
      operationId: getExampleUsagePolicy
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PatternDesc'
                - $ref: '#/components/schemas/ConnectorRestrictionDesc'
                - $ref: '#/components/schemas/DeletionDesc'
                - $ref: '#/components/schemas/DurationDesc'
                - $ref: '#/components/schemas/IntervalDesc'
                - $ref: '#/components/schemas/LoggingDesc'
                - $ref: '#/components/schemas/NotificationDesc'
                - $ref: '#/components/schemas/PermissionDesc'
                - $ref: '#/components/schemas/ProhibitionDesc'
                - $ref: '#/components/schemas/SecurityRestrictionDesc'
                - $ref: '#/components/schemas/UsageNumberDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/endpoints:
    get:
      tags:
        - Endpoints
      summary: Get a list of base resources with pagination
      operationId: getAll_4
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelEndpointView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelEndpointView'
    post:
      tags:
        - Endpoints
      summary: Create a base resource
      operationId: create_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EndpointView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EndpointView'
  /api/contracts:
    get:
      tags:
        - Contracts
      summary: Get a list of base resources with pagination
      operationId: getAll_5
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelContractView'
    post:
      tags:
        - Contracts
      summary: Create a base resource
      operationId: create_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractView'
  /api/configurations:
    get:
      tags:
        - Configurations
      summary: Get a list of base resources with pagination
      operationId: getAll_6
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelConfigurationView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelConfigurationView'
    post:
      tags:
        - Configurations
      summary: Create a base resource
      operationId: create_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationView'
  /api/catalogs:
    get:
      tags:
        - Catalogs
      summary: Get a list of base resources with pagination
      operationId: getAll_7
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelCatalogView'
    post:
      tags:
        - Catalogs
      summary: Create a base resource
      operationId: create_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogView'
  /api/brokers:
    get:
      tags:
        - Brokers
      summary: Get a list of base resources with pagination
      operationId: getAll_8
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelBrokerView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelBrokerView'
    post:
      tags:
        - Brokers
      summary: Create a base resource
      operationId: create_8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrokerView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BrokerView'
  /api/artifacts:
    get:
      tags:
        - Artifacts
      summary: Get a list of base resources with pagination
      operationId: getAll_9
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
    post:
      tags:
        - Artifacts
      summary: Create a base resource
      operationId: create_9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtifactView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArtifactView'
  /api/apps:
    get:
      tags:
        - Data Apps
      summary: Get a list of base resources with pagination
      operationId: getAll_10
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAppView'
    post:
      tags:
        - Data Apps
      summary: Create a base resource
      operationId: create_10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppDesc'
        required: true
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppView'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppView'
  /api/subscriptions/owning:
    get:
      tags:
        - Subscriptions
      operationId: getAllFiltered
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
        "405":
          description: Not allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
  /api/resources/{id}/template:
    get:
      tags:
        - Resources
      summary: Request Container Template
      description: Get the app resource's container template
      operationId: getContainerTemplateByAppAndRepresentation
      parameters:
        - name: id
          in: path
          description: The resource uuid.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/resources/{id}/subscriptions:
    get:
      tags:
        - Resources
      summary: Get all children of a base resource with pagination
      operationId: getResource_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
  /api/resources/{id}/brokers:
    get:
      tags:
        - Resources
      summary: Get all children of a base resource with pagination
      operationId: getResource_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelBrokerView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelBrokerView'
  /api/representations/{id}/subscriptions:
    get:
      tags:
        - Representations
      summary: Get all children of a base resource with pagination
      operationId: getResource_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
  /api/registry/users:
    get:
      tags:
        - "Registry: User and Container management"
      summary: Get user list
      description: Gets the registry user list
      operationId: getRegistryUsers
      responses:
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/connector:
    get:
      tags:
        - Connector
      summary: Private IDS self-description
      operationId: getPrivateSelfDescription
      responses:
        "401":
          description: Unauthorized
          content:
            application/ld+json:
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            application/ld+json:
              schema:
                type: object
        "200":
          description: Ok
          content:
            application/ld+json:
              schema:
                type: object
  /api/configurations/active:
    get:
      tags:
        - Configurations
      summary: Get current configuration
      operationId: getConfiguration
      responses:
        "401":
          description: Unauthorized
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConfigurationView'
        "200":
          description: Ok
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConfigurationView'
  /api/brokers/{id}/resources:
    get:
      tags:
        - Brokers
      summary: Get all children of a base resource with pagination
      operationId: getResource_14
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelResourceView'
  /api/artifacts/{id}/subscriptions:
    get:
      tags:
        - Artifacts
      summary: Get all children of a base resource with pagination
      operationId: getResource_15
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelSubscriptionView'
  /api/artifacts/{id}/data/**:
    get:
      tags:
        - Artifacts
      summary: Get data by artifact id with query input
      operationId: getData_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: download
          in: query
          required: false
          schema:
            type: boolean
        - name: agreementUri
          in: query
          required: false
          schema:
            type: string
            format: uri
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
  /api/artifacts/{id}/agreements:
    get:
      tags:
        - Artifacts
      summary: Get all children of a base resource with pagination
      operationId: getResource_17
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAgreementView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAgreementView'
  /api/apps/search:
    get:
      tags:
        - Data Apps
        - UI
      summary: Search all Apps with value in description
      operationId: searchApps
      parameters:
        - name: search
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                type: object
  /api/agreements:
    get:
      tags:
        - Agreements
      summary: Get a list of base resources with pagination
      operationId: getAll_11
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAgreementView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelAgreementView'
  /api/agreements/{id}:
    get:
      tags:
        - Agreements
      summary: Get a base resource by id
      operationId: get_11
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgreementView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgreementView'
  /api/agreements/{id}/artifacts:
    get:
      tags:
        - Agreements
      summary: Get all children of a base resource with pagination
      operationId: getResource_20
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
        "200":
          description: Ok
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelArtifactView'
  /:
    get:
      tags:
        - Connector
      summary: Public IDS self-description
      operationId: getPublicSelfDescription_1
      responses:
        "401":
          description: Unauthorized
          content:
            application/ld+json:
              schema:
                type: object
        "200":
          description: Ok
          content:
            application/ld+json:
              schema:
                type: object
components:
  schemas:
    SubscriptionDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        target:
          type: string
          format: uri
        location:
          type: string
          format: uri
        subscriber:
          type: string
          format: uri
        pushData:
          type: boolean
        idsProtocol:
          type: boolean
          readOnly: true
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    SubscriptionView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        target:
          type: string
          format: uri
        location:
          type: string
          format: uri
        subscriber:
          type: string
          format: uri
        pushData:
          type: boolean
        idsProtocol:
          type: boolean
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    ContractRuleDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        remoteId:
          type: string
          format: uri
          readOnly: true
        value:
          type: string
    ContractRuleView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        value:
          type: string
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    ResourceDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        remoteId:
          type: string
          format: uri
          readOnly: true
        keywords:
          type: array
          items:
            type: string
        publisher:
          type: string
          format: uri
        language:
          type: string
        license:
          type: string
          format: uri
        sovereign:
          type: string
          format: uri
        endpointDocumentation:
          type: string
          format: uri
        paymentMethod:
          type: string
          enum:
            - undefined
            - fixedPrice
            - free
            - negotiationBasis
        samples:
          type: array
          items:
            type: string
            format: uri
    ResourceView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        remoteId:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        keywords:
          type: array
          items:
            type: string
        publisher:
          type: string
          format: uri
        language:
          type: string
        license:
          type: string
          format: uri
        version:
          type: integer
          format: int64
        sovereign:
          type: string
          format: uri
        endpointDocumentation:
          type: string
          format: uri
        paymentModality:
          type: string
          enum:
            - undefined
            - fixedPrice
            - free
            - negotiationBasis
        samples:
          type: array
          items:
            type: string
            format: uri
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    RepresentationDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        remoteId:
          type: string
          format: uri
          readOnly: true
        mediaType:
          type: string
        language:
          type: string
        standard:
          type: string
        runtimeEnvironment:
          type: string
        distributionService:
          type: string
          format: uri
    RepresentationView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        remoteId:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        mediaType:
          type: string
        language:
          type: string
        runtimeEnvironment:
          type: string
        distributionService:
          type: string
          format: uri
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    EndpointDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        remoteId:
          type: string
          format: uri
          readOnly: true
        location:
          type: string
          format: uri
        mediaType:
          type: string
        port:
          type: integer
          format: int64
        protocol:
          type: string
        type:
          type: string
          enum:
            - Configuration
            - Input
            - Output
            - Status
            - UsagePolicy
        docs:
          type: string
          format: uri
        info:
          type: string
        path:
          type: string
    EndpointView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        location:
          type: string
        mediaType:
          type: string
        port:
          type: integer
          format: int64
        protocol:
          type: string
        type:
          type: string
          enum:
            - Configuration
            - Input
            - Output
            - Status
            - UsagePolicy
        docs:
          type: string
          format: uri
        info:
          type: string
        path:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    ContractDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        remoteId:
          type: string
          format: uri
          readOnly: true
        consumer:
          type: string
          format: uri
        provider:
          type: string
          format: uri
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    ContractView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        consumer:
          type: string
          format: uri
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    AuthenticationDesc:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ConfigurationDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        connectorId:
          type: string
          format: uri
        defaultEndpoint:
          type: string
          format: uri
          readOnly: true
        version:
          type: string
          readOnly: true
        curator:
          type: string
          format: uri
        maintainer:
          type: string
          format: uri
        inboundModelVersion:
          type: array
          readOnly: true
          items:
            type: string
        outboundModelVersion:
          type: string
          readOnly: true
        securityProfile:
          type: string
          readOnly: true
          enum:
            - Base Security
            - Trust Plus Security
            - Trust Security
        logLevel:
          type: string
          enum:
            - "Off"
            - Trace
            - Debug
            - Info
            - Warn
            - Error
        status:
          type: string
          enum:
            - Faulty
            - Offline
            - Online
        deployMode:
          type: string
          enum:
            - Productive
            - Test
        truststoreSettings:
          $ref: '#/components/schemas/TruststoreDesc'
        proxySettings:
          $ref: '#/components/schemas/ProxyDesc'
        keystoreSettings:
          $ref: '#/components/schemas/KeystoreDesc'
    KeystoreDesc:
      type: object
      properties:
        location:
          type: string
          format: uri
        password:
          type: string
        alias:
          type: string
    ProxyDesc:
      type: object
      properties:
        location:
          type: string
          format: uri
        exclusions:
          type: array
          items:
            type: string
        authentication:
          $ref: '#/components/schemas/AuthenticationDesc'
    TruststoreDesc:
      type: object
      properties:
        location:
          type: string
          format: uri
        password:
          type: string
        alias:
          type: string
    ConfigurationView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        connectorId:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        defaultEndpoint:
          type: string
          format: uri
        version:
          type: string
        curator:
          type: string
          format: uri
        maintainer:
          type: string
          format: uri
        inboundModelVersion:
          type: array
          items:
            type: string
        outboundModelVersion:
          type: string
        securityProfile:
          type: string
          enum:
            - Base Security
            - Trust Plus Security
            - Trust Security
        status:
          type: string
          enum:
            - Faulty
            - Offline
            - Online
        logLevel:
          type: string
          enum:
            - "Off"
            - Trace
            - Debug
            - Info
            - Warn
            - Error
        deployMode:
          type: string
          enum:
            - Productive
            - Test
        proxy:
          $ref: '#/components/schemas/ProxyView'
        trustStore:
          $ref: '#/components/schemas/TruststoreView'
        keyStore:
          $ref: '#/components/schemas/KeystoreView'
        _links:
          $ref: '#/components/schemas/Links'
    KeystoreView:
      type: object
      properties:
        location:
          type: string
          format: uri
        alias:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    ProxyView:
      type: object
      properties:
        location:
          type: string
          format: uri
        exclusions:
          type: array
          items:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    TruststoreView:
      type: object
      properties:
        location:
          type: string
          format: uri
        alias:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CatalogDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
    CatalogView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    BrokerDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        location:
          type: string
          format: uri
        status:
          type: string
          readOnly: true
          enum:
            - Unregistered
            - Registered
    BrokerView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        location:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - Unregistered
            - Registered
        _links:
          $ref: '#/components/schemas/Links'
    ArtifactDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        remoteId:
          type: string
          format: uri
          readOnly: true
        remoteAddress:
          type: string
          format: uri
          readOnly: true
        accessUrl:
          type: string
          format: url
        basicAuth:
          $ref: '#/components/schemas/AuthenticationDesc'
        apiKey:
          $ref: '#/components/schemas/AuthenticationDesc'
        value:
          type: string
        automatedDownload:
          type: boolean
    ArtifactView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        remoteId:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        numAccessed:
          type: integer
          format: int64
        byteSize:
          type: integer
          format: int64
        checkSum:
          type: integer
          format: int64
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    AppDesc:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        remoteId:
          type: string
          format: uri
          readOnly: true
        docs:
          type: string
        environmentVariables:
          type: string
        storageConfig:
          type: string
        supportedUsagePolicies:
          type: array
          items:
            type: string
            enum:
              - PROVIDE_ACCESS
              - PROHIBIT_ACCESS
              - N_TIMES_USAGE
              - DURATION_USAGE
              - USAGE_DURING_INTERVAL
              - USAGE_UNTIL_DELETION
              - USAGE_LOGGING
              - USAGE_NOTIFICATION
              - CONNECTOR_RESTRICTED_USAGE
              - SECURITY_PROFILE_RESTRICTED_USAGE
        securityScannerName:
          type: string
        securityScannerVendor:
          type: string
        securityScannerVersion:
          type: string
        securityScannerCompletePercent:
          type: integer
          format: int64
        securityScannerIssuesTotal:
          type: integer
          format: int64
        securityScannerIssuesFixable:
          type: integer
          format: int64
        securityScannerIssuesLow:
          type: integer
          format: int64
        securityScannerIssuesMedium:
          type: integer
          format: int64
        securityScannerIssuesHigh:
          type: integer
          format: int64
        repositoryName:
          type: string
        repositoryNameSpace:
          type: string
        repositoryDigest:
          type: string
    AppView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        docs:
          type: string
        environmentVariables:
          type: string
        storageConfig:
          type: string
        supportedUsagePolicies:
          type: array
          items:
            type: string
            enum:
              - PROVIDE_ACCESS
              - PROHIBIT_ACCESS
              - N_TIMES_USAGE
              - DURATION_USAGE
              - USAGE_DURING_INTERVAL
              - USAGE_UNTIL_DELETION
              - USAGE_LOGGING
              - USAGE_NOTIFICATION
              - CONNECTOR_RESTRICTED_USAGE
              - SECURITY_PROFILE_RESTRICTED_USAGE
        additional:
          type: object
          additionalProperties:
            type: string
        _links:
          $ref: '#/components/schemas/Links'
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    PagedModelContractView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            contracts:
              type: array
              items:
                $ref: '#/components/schemas/ContractView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelRepresentationView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            representations:
              type: array
              items:
                $ref: '#/components/schemas/RepresentationView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelCatalogView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            catalogs:
              type: array
              items:
                $ref: '#/components/schemas/CatalogView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelResourceView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            resources:
              type: array
              items:
                $ref: '#/components/schemas/ResourceView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelArtifactView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            artifacts:
              type: array
              items:
                $ref: '#/components/schemas/ArtifactView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelAppView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            apps:
              type: array
              items:
                $ref: '#/components/schemas/AppView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    UserCreationReq:
      type: object
      properties:
        email:
          type: string
        realname:
          type: string
        comment:
          type: string
        password:
          type: string
        username:
          type: string
      description: The user
    UserEntity:
      type: object
      properties:
        userId:
          type: integer
          format: int32
        username:
          type: string
      description: The project member
    ConnectorRestrictionDesc:
      type: object
      example:
        type: CONNECTOR_RESTRICTED_USAGE
        url: https://localhost:8080
      allOf:
        - $ref: '#/components/schemas/PatternDesc'
        - type: object
          properties:
            url:
              type: string
    DeletionDesc:
      type: object
      example:
        type: USAGE_UNTIL_DELETION
        start: 2020-07-11T00:00:00Z
        end: 2020-07-11T00:00:00Z
        date: 2020-07-11T00:00:00Z
      allOf:
        - $ref: '#/components/schemas/PatternDesc'
        - type: object
          properties:
            start:
              type: string
            end:
              type: string
            date:
              type: string
    DurationDesc:
      type: object
      example:
        type: DURATION_USAGE
        duration: PT1M30.5S
      allOf:
        - $ref: '#/components/schemas/PatternDesc'
        - type: object
          properties:
            duration:
              type: string
    IntervalDesc:
      type: object
      example:
        type: USAGE_DURING_INTERVAL
        start: 2020-07-11T00:00:00Z
        end: 2020-07-11T00:00:00Z
      allOf:
        - $ref: '#/components/schemas/PatternDesc'
        - type: object
          properties:
            start:
              type: string
            end:
              type: string
    LoggingDesc:
      type: object
      example:
        type: USAGE_LOGGING
      allOf:
        - $ref: '#/components/schemas/PatternDesc'
    NotificationDesc:
      type: object
      example:
        type: USAGE_NOTIFICATION
        url: https://localhost:8080/api/ids/data
      allOf:
        - $ref: '#/components/schemas/PatternDesc'
        - type: object
          properties:
            url:
              type: string
    PatternDesc:
      required:
        - type
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        type:
          type: string
      discriminator:
        propertyName: type
    PermissionDesc:
      type: object
      example:
        type: PROVIDE_ACCESS
      allOf:
        - $ref: '#/components/schemas/PatternDesc'
    ProhibitionDesc:
      type: object
      example:
        type: PROHIBIT_ACCESS
      allOf:
        - $ref: '#/components/schemas/PatternDesc'
    SecurityRestrictionDesc:
      type: object
      description: "Possible profiles are: idsc:BASE_SECURITY_PROFILE, idsc:TRUST_SECURITY_PROFILE\
        \ and idsc:TRUST_PLUS_SECURITY_PROFILE"
      example:
        type: SECURITY_PROFILE_RESTRICTED_USAGE
        profile: BASE_SECURITY_PROFILE
      allOf:
        - $ref: '#/components/schemas/PatternDesc'
        - type: object
          properties:
            profile:
              type: string
    UsageNumberDesc:
      type: object
      example:
        type: N_TIMES_USAGE
        value: "5"
      allOf:
        - $ref: '#/components/schemas/PatternDesc'
        - type: object
          properties:
            value:
              type: string
    PagedModelContractRuleView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            rules:
              type: array
              items:
                $ref: '#/components/schemas/ContractRuleView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    QueryInput:
      type: object
      properties:
        headers:
          type: object
          additionalProperties:
            type: string
        params:
          type: object
          additionalProperties:
            type: string
        pathVariables:
          type: object
          additionalProperties:
            type: string
        optional:
          type: string
      description: "Query parameters, headers and path variables as maps"
      example:
        headers:
          key: value
        params:
          key: value
        pathVariables:
          key: value
      oneOf:
        - $ref: '#/components/schemas/QueryInput'
    StreamingResponseBody:
      type: object
    PagedModelEndpointView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            endpoints:
              type: array
              items:
                $ref: '#/components/schemas/EndpointView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelSubscriptionView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            subscriptions:
              type: array
              items:
                $ref: '#/components/schemas/SubscriptionView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelBrokerView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            brokers:
              type: array
              items:
                $ref: '#/components/schemas/BrokerView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelConfigurationView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            configurations:
              type: array
              items:
                $ref: '#/components/schemas/ConfigurationView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    AgreementView:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        remoteId:
          type: string
          format: uri
        confirmed:
          type: boolean
        value:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelAgreementView:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            agreements:
              type: array
              items:
                $ref: '#/components/schemas/AgreementView'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
