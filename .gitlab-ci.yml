stages:
  - build
  #- test
  - deploy

.build_and_push_docker_image:
  stage: build
  image: docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t $IMAGE_TAG_TMP .
    - docker push $IMAGE_TAG_TMP
  tags:
    - docker

build-and-push-docker-image-dev:
  extends: .build_and_push_docker_image
  only:
    - development
  variables:
    IMAGE_TAG_TMP: $CI_REGISTRY_IMAGE/appstore:$CI_COMMIT_SHA

build-and-push-docker-image:
  extends: .build_and_push_docker_image
  only:
    - main
  variables:
    IMAGE_TAG_TMP: $CI_REGISTRY_IMAGE/appstore:latest

build-and-push-docker-image-binac:
  extends: .build_and_push_docker_image
  only:
    - deploy
  variables:
    IMAGE_TAG_TMP: $CI_REGISTRY_IMAGE/appstore-binac:latest

build-and-push-docker-image-mobids:
  extends: .build_and_push_docker_image
  only:
    - deployMOBIDS
  variables:
    IMAGE_TAG_TMP: $CI_REGISTRY_IMAGE/appstore-mobids:latest

build-and-push-docker-image-drm:
  extends: .build_and_push_docker_image
  only:
    - deployDRM
  variables:
    IMAGE_TAG_TMP: $CI_REGISTRY_IMAGE/appstore-drm:latest

#smoke-test:
#  stage: test
#  image: docker:git
#  services:
#    - name: $IMAGE_TAG
#      alias: smoke-test-container
#  script:
#    - apk update && apk add curl
#    - curl -s --fail --show-error http://smoke-test-container:8080 > /dev/null
#  only:
#    - development

.deploy-to-vm:
  stage: deploy
  image: tmaier/docker-compose:latest
  before_script:
    - eval $(ssh-agent -s)
    - echo "$PRIV_KEY" | tr -d '\r' | ssh-add - >/dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $VM_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  script:
    - mkdir ./deploy/ssl
    - echo "$CERT_KEY" > "./deploy/ssl/key.pem"
    - echo "$CERT" > "./deploy/ssl/cert.pem"
    # Docker Compose stop on remote machine
    - ssh $VM_USER@$VM_HOST "cd deploy && docker-compose down"
    # Copy files to vm
    - scp -r deploy $VM_USER@$VM_HOST:~
    # Docker Login from vm with gitlab token (needs to be created) and docker-compose
    - ssh $VM_USER@$VM_HOST "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY && cd deploy && docker-compose pull && docker-compose up -d"
  tags:
    - docker

deploy-to-binac:
  extends: .deploy-to-vm
  only:
    - deploy
  variables:
    VM_USER: gitlab
    VM_HOST: binac
    PRIV_KEY: $BINAC_PRIV_KEY
    CERT_KEY: $BINAC_CERT_KEY
    CERT: $BINAC_CERT

deploy-to-drm-appstore:
  extends: .deploy-to-vm
  only:
    - deployDRM
  variables:
    VM_USER: gitlab
    VM_HOST: drm-appstore
    PRIV_KEY: $DRM_PRIV_KEY
    CERT_KEY: $DRM_CERT_KEY
    CERT: $DRM_CERT

deploy-to-mobids-appstore:
  extends: .deploy-to-vm
  only:
    - deployMOBIDS
  variables:
    VM_USER: gitlab
    VM_HOST: mobids-appstore
    PRIV_KEY: $MOBIDS_PRIV_KEY
    CERT_KEY: $MOBIDS_CERT_KEY
    CERT: $MOBIDS_CERT
